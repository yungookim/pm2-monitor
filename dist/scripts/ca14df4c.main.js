(function(){window.pm2Monitor={Models:{},Collections:{},Views:{},Routers:{},init:function(){"use strict";return new this.Routers.MainRouter,Backbone.history.start(),console.log("Hello from Backbone!")}},$(function(){"use strict";return pm2Monitor.init()})}).call(this),this.JST={"main-template":'<h1>System</h1><p>Host Name : <strong>{{system_info.hostname}}</strong></p><p>System Uptime : {{system_info.uptime}}</p><p>Load Averages :{{#monit.loadavg}}<span class="label label-primary" style="margin:10px;">{{.}}</span>{{/monit.loadavg}}</p><p> Total Memory : {{monit.total_mem}} </p><p> Free Memory : {{monit.free_mem}} </p><p>CPU{{#monit.cpu}}<div class="well col-lg-6">Model : {{model}} <br>Speed : {{speed}} <br><h5>Times </h5>User : {{times.user}} <br>Nice : {{times.nice}} <br>System : {{times.sys}} <br>Idel : {{times.idle}} <br>IRQ : {{times.irq}} <br></div>{{/monit.cpu}}</p><p>Interfaces{{#monit.interfaces.lo}}<div class="well col-lg-3">Address : {{address}} <br>Family : {{family}} <br>Internal : {{internal}}</div>{{/monit.interfaces.lo}}{{#monit.interfaces.wlan0}}<div class="well col-lg-3">Address : {{address}} <br>Family : {{family}} <br>Internal : {{internal}}</div>{{/monit.interfaces.wlan0}}</p><h1>Processes</h1>{{#processes}}<div class="well col-lg-6">Status : <span class="label label-success" style="margin:10px;">{{status}}</span><br>PID : {{pid}} <br>PM ID : {{pm_id}} <br>Memory : {{monit.memory}} <br>CPU : {{monit.cpu}} <br>Script : {{opts.script}} <br>Name : {{opts.name}} <br>Exec Path : {{opts.pm_exec_path}} <br>Logname : {{opts.kimy}} <br>File out : {{opts.fileOutput}} <br>PM Error Log : {{opts.fileOutput}} <br>File Error : {{opts.fileError}} <br>PID File : {{opts.pidFile}} <br>Restart Time : {{opts.restart_time}} <br>Unstable Restarts : {{opts.unstable_restarts}} <br></div>{{/processes}}',done:"true"},function(){"use strict";var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};pm2Monitor.Views.MainView=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.initialize=function(){return this.template=window.JST["main-template"],this.listenTo(this.model,"change",this.render)},d.prototype.render=function(){return this.$el.html(Mustache.render(this.template,this.model.toJSON()))},d}(Backbone.View)}.call(this),function(){"use strict";var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};pm2Monitor.Routers.MainRouter=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.routes={"":"home"},d.prototype.initialize=function(){return window.pm2Monitor.Globals={}},d.prototype.home=function(){return new pm2Monitor.Views.MainView({el:$("#content"),model:new pm2Monitor.Models.Pm2AppModel})},d}(Backbone.Router)}.call(this),function(){"use strict";var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};pm2Monitor.Models.Pm2AppModel=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.urlRoot="/test.json",d.prototype.defaults={system_info:{hostname:"",uptime:0},monit:{loadavg:[0,0,0],total_mem:0,free_mem:0,cpu:[{model:"",speed:0,times:{user:0,nice:0,sys:0,idle:0,irq:0}}],interfaces:{lo:[{address:"127.0.0.1",family:"IPv4",internal:!0},{address:"::1",family:"IPv6",internal:!0}],wlan0:[{address:"",family:"IPv4",internal:!1},{address:"",family:"IPv6",internal:!1}]}},processes:[{pid:0,opts:{script:"",name:"",pm_exec_path:"",DBUS_SESSION_BUS_ADDRESS:"",pm_out_log_path:"",fileOutput:"",pm_err_log_path:"",fileError:"",pm_pid_path:"",pidFile:"",pm_id:0,pm_uptime:0,restart_time:0,unstable_restarts:0},pm_id:0,status:"online",monit:{memory:0,cpu:0}}]},d.prototype.initialize=function(){return this.fetch({success:function(){return console.log("PM2 stats loaded")},error:function(){return console.log("Error while loading PM2 stats")}})},d}(Backbone.Model)}.call(this);